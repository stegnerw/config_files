set encoding=utf-8

" Leaders
let mapleader = "\<space>"
let maplocalleader = "\\"

set nocompatible

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Plugins
call plug#begin('~/.vim/plugged')
" Hybrid numbering
set number
Plug 'jeffkreeftmeijer/vim-numbertoggle'
" Code commenting out
Plug 'scrooloose/nerdcommenter'
" Code completion
"Plug 'Vimjas/vim-python-pep8-indent'
" LSP, autocomplete, and linting
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
" LaTeX
Plug 'lervag/vimtex'
" Markdown
"Plug 'JamshedVesuna/vim-markdown-preview'
" NerdFonts
Plug 'lambdalisue/nerdfont.vim'
" Status bar
Plug 'itchyny/lightline.vim'
"Plug 'josa42/vim-lightline-coc'
" File browsing
Plug 'preservim/nerdtree'
" Git
Plug 'airblade/vim-gitgutter'
" PlatformIO
Plug 'normen/vim-pio'
" Multiple cursors
"Plug 'mg979/vim-visual-multi'
call plug#end()

" Habit breaking
inoremap <esc> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>

" Misc/unsorted
set textwidth=80
set colorcolumn=81
set shiftround
set scrolloff=5
nnoremap H 0
nnoremap L <end>
set backspace=indent,eol,start
set wildmenu  " Better tab complete in commands
set display=truncate
" For c-a and c-x
set nrformats-=octal
set nrformats+=alpha

" Buffer settings
set hidden  " Hide buffers instead of closing them
nnoremap <leader>b :ls<cr>:b<space>

" Edit/source .vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Wrap current word
nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
vnoremap <leader>" <esc>`>a"<esc>`<i"<esc>
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel
vnoremap <leader>' <esc>`>a'<esc>`<i'<esc>

" Word case
" Uppercase current word
nnoremap <leader>U gUiw
" Lowercase current word
nnoremap <leader>u guiw
" Toggle case current word
nnoremap <leader>tu g~iw
nnoremap <leader>tU g~iw

" Right-handed escape from insert mode
inoremap jk <esc>

" Spell Check
set spelllang=en
set spell

set showcmd
" Backup settings
set backupdir=$HOME/.vim_backup
set undofile

" Search settings
" Start searching on partial search
set ignorecase
set smartcase
set incsearch
" Highlight search results
set hlsearch
highlight search ctermbg=LightBlue ctermfg=Black
highlight incsearch cterm=underline ctermbg=LightBlue ctermfg=Black
nnoremap <silent> <leader>h :nohlsearch<cr>
" Bring search results to mid-screen
nnoremap n nzz
nnoremap N Nzz

" Indentation
set expandtab
set tabstop=8
set softtabstop=2
set shiftwidth=2
set autoindent
filetype plugin indent on

" Folding
" Toggle fold
nnoremap <leader>f za
set foldmethod=syntax
set foldnestmax=10
set nofoldenable
set foldlevel=2

" Whitespace Visibility
" Show trailing whitespace and eol
set listchars=trail:·,tab:»·
set list

" Markdown
let vim_markdown_peview_toggle = 2

" Tex
" Prevents vim from thinking a tex file is plaintex
let g:tex_flavor = 'latex'
let g:vimtex_view_method = 'zathura'
" Order and usage requested by vim-tex
syntax on

" Lightline
set laststatus=2
set noshowmode
let g:lightline = {
  \ 'colorscheme': 'darcula',
  \ }

" NERDTree
nnoremap <leader>nn :NERDTreeFocus<CR>
nnoremap <leader>ns :NERDTree<CR>
nnoremap <leader>nt :NERDTreeToggle<CR>
nnoremap <leader>nf :NERDTreeFind<CR>
" Exit Vim if NERDTree is the only window left
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1
    \ && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" Gitgutter
set updatetime=100 " Update every 100 ms(also controls swap file)

" Enable CCLS and register with vim-lsp
if executable('ccls')
  " disable clangd
  let g:lsp_settings = {
    \  'clangd': {'disabled': v:true}
    \}
  autocmd User lsp_setup call lsp#register_server({
    \ 'name': 'ccls',
    \ 'cmd': {server_info->['ccls']},
    \ 'root_uri': {server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), '.ccls'))},
    \ 'initialization_options': {'cache': {'directory': expand('/tmp/ccls') }},
    \ 'allowlist': ['c', 'cpp', 'objc', 'objcpp', 'cc'],
    \ })
endif

" Abbreviations

" Email
iabbrev pm@@ wayne.stegner@protonmail.com
" Copyright
iabbrev ccopy Copyright 2022 Wayne Stegner, all rights reserved.
" Signature
iabbrev ssig --<cr>Wayne Stegner<cr>wayne.stegner@protonmail.com
